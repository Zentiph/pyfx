# pylint: disable=all

from abc import ABC, abstractmethod
from typing import Iterable

import PIL
import PIL.ImageDraw

from .enums import Alignment

class FXNode(ABC):
    def __init__(self) -> None: ...
    @property
    def alignment(self) -> Alignment: ...
    @alignment.setter
    def alignment(self, alignment: Alignment) -> None: ...
    @property
    def opacity(self) -> float: ...
    @opacity.setter
    def opacity(self, opacity: float) -> None: ...
    @abstractmethod
    def render(self, to: PIL.ImageDraw.ImageDraw) -> None: ...

class FXGroup(FXNode):
    def __init__(self, *nodes: FXNode) -> None: ...
    def add(self, node: FXNode) -> None: ...
    def remove(self, node: FXNode) -> None: ...
    def contains(self, node: FXNode) -> bool: ...
    def render(self, to: PIL.ImageDraw.ImageDraw) -> None: ...
    def __iter__(self) -> Iterable[FXNode]: ...
